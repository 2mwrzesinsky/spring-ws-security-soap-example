<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:sws="http://www.springframework.org/schema/web-services"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/web-services
                        http://www.springframework.org/schema/web-services/web-services.xsd">

    <description>
        Context for the password protected WS. It makes use of a users
        service to check the credentials.
    </description>

    <!-- Imports base context -->
    <import resource="classpath:/context/ws/ws.xml" />

    <!-- Registers interceptors -->
    <sws:interceptors>
        <ref bean="soapEnvelopeLoggingInterceptor" />
        <ref bean="payloadValidatingInterceptor" />
        <ref bean="securityInterceptor" />
    </sws:interceptors>

    <!-- Security interceptor -->
    <bean id="securityInterceptor" class="${interceptor.security.class}">
        <property name="policyConfiguration" value="${security.file.path}" />
        <property name="callbackHandlers">
            <list>
                <ref bean="keystoreHandler" />
                <ref bean="certificateHandler" />
            </list>
        </property>
    </bean>

    <!-- Certificate callback handler -->
    <bean id="certificateHandler" class="${callbackHandler.validation.certificate.class}">
        <property name="authenticationManager" ref="authenticationManager" />
    </bean>

    <!-- Key store callback handler -->
    <bean id="keystoreHandler" class="${callbackHandler.validation.keystore.class}">
        <property name="keyStore" ref="keyStore" />
        <property name="trustStore" ref="keyStore" />
        <property name="privateKeyPassword" value="${keystore.password.private}" />
        <property name="defaultAlias" value="${keystore.alias}" />
    </bean>

    <!-- Authentication Manager -->
    <bean id="authenticationManager" class="${authentication.manager.class}">
        <constructor-arg >
            <list>
                <ref bean="authenticationProvider" />
            </list>
        </constructor-arg>
    </bean>

    <!-- Authentication Provider -->
    <bean id="authenticationProvider" class="${authentication.provider.class}">
        <property name="x509AuthoritiesPopulator" ref="authPopulator" />
    </bean>

    <!-- X509 authorities populator -->
    <bean id="authPopulator" class="${authentication.provider.populator.class}">
        <property name="userDetailsService" ref="securityService" />
    </bean>

    <!-- Security service -->
    <bean id="securityService" class="${service.security.class}" />

    <!-- Key store -->
    <bean id="keyStore" class="com.wandrell.example.swss.security.KeystoreFactory" factory-method="getKeystore"/>

</beans>